#!/bin/python3

# 2024.06.04, by @zachleach

class Solution:
    def encode(self, strs):
        # edge case handling
        if len(strs) == 0:
            return ""

        encoding = ""
        for s in strs:
            # edge case handling
            if (s == ""):
                encoding += "x"
                if len(strs) > 1:
                    encoding += ","
                continue

            for i in range(len(s) - 1):
                ch = s[i]
                encoding += f'{ord(ch)}' + " "
            encoding += f'{ord(s[len(s) - 1])}' + ','

        return encoding
    
    def decode(self, s):
        # edge case handling
        if s == "":
            return []
        encodings = s.split(',')
        if len(s) > 1:
            encodings.pop()

        result = []
        for word_enc in encodings:
            if word_enc == "x":
                result += [""]
                continue

            ch_encs = word_enc.split()
            word = ""
            for e in ch_encs:
                ch = chr(int(e))
                word += ch
        
            result += [word]
        
        return result
        
        

strs = [""]
s = Solution()
encode = s.encode(strs)

print(encode)


decode = s.decode(encode)
print(decode)


